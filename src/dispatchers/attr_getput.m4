dnl Process this m4 file to produce 'C' language file.
dnl
dnl If you see this line, you can ignore the next one.
/* Do not edit this file. It is produced from the corresponding .m4 source */
dnl
/*
 *  Copyright (C) 2017, Northwestern University and Argonne National Laboratory
 *  See COPYRIGHT notice in top-level directory.
 */
/* $Id: attribute.m4 2873 2017-02-14 02:58:34Z wkliao $ */

#ifdef HAVE_CONFIG_H
# include <config.h>
#endif

#include <stdlib.h>
#include <string.h>

#include <pnetcdf.h>
#include <dispatch.h>

include(`foreach.m4')dnl
include(`utils.m4')dnl

dnl
define(`APINAME',`ifelse(`$2',`',`ncmpi_$1_att$2',`ncmpi_$1_att_$2')')dnl
dnl
dnl
dnl GETPUT_ATT(get/put, iType)
dnl
define(`GETPUT_ATT',dnl
`dnl
/*----< APINAME($1,$2)() >---------------------------------------------------*/
/* ifelse(`$1',`get',`This is an independent subroutine.',`
 * This is a collective subroutine, all arguments should be consistent among
 * all processes.
 *
 * Note from netCDF user guide:
 * Attributes are always single values or one-dimensional arrays. This works
 * out well for a string, which is a one-dimensional array of ASCII characters.
 *')
ifelse(`$2',`',` * The user buffer data type matches the external type defined in file.',
`$2',`text',` * This API never returns NC_ERANGE error, as text is not convertible to numerical types',` *')
 */
int
APINAME($1,$2)(int             ncid,
               int             varid,
               const char     *name,
               ifelse(`$1',`put',`ifelse(`$2',`text',,`nc_type xtype,')
               MPI_Offset  nelems,   /* number of elements in buf */')
               ifelse(`$1',`put',`const') ifelse(`$2',`','void`, FUNC2ITYPE($2)) *buf)
{
    int err;
    PNC *pncp;

ifelse(`$2',`',`
    nc_type itype='ifelse(`$1',`get',`NC_NAT;',`xtype;'),
`$2',`long',`#if SIZEOF_LONG == SIZEOF_INT
    nc_type itype=NC_INT;
#elif SIZEOF_LONG == SIZEOF_LONG_LONG
    nc_type itype=NC_INT64;
#endif',`    nc_type itype=NC_TYPE($2);')

    /* check if ncid is valid */
    err = PNC_check_id(ncid, &pncp);
    if (err != NC_NOERR) return err;

ifelse(`$1',`put',`
    /* set global _FillValue is not allowed */
    if (varid == NC_GLOBAL && name != NULL && !strcmp(name, _FillValue))
        return NC_EGLOBAL;')

    /* calling the subroutine that implements APINAME($1,$2)() */
    return pncp->dispatch->`$1'_att(pncp->ncp,
                                    varid, name,
                                    ifelse(`$1',`put',`ifelse(`$2',`text',`NC_CHAR,',`xtype,') nelems,')
                                    buf,
                                    itype);
}
')dnl

foreach(`putget', (get, put),
        `foreach(`iType', (,text,schar,uchar,short,ushort,int,uint,long,float,double,longlong,ulonglong),
                 `GETPUT_ATT(putget, iType)
')')

